# Environment file for compose.yml
# Copy this file to .env and fill in the values.

# -----------------------------------------------------------------------------
# Global Settings
# -----------------------------------------------------------------------------
# Sets the project name for Docker Compose, which prefixes container and network names.
COMPOSE_PROJECT_NAME=my_infra

# -----------------------------------------------------------------------------
# Server Configuration
# -----------------------------------------------------------------------------
# The network address the server will bind to. 0.0.0.0 binds to all interfaces.
SERVER_ADDRESS=0.0.0.0
# The port the application will listen on.
PORT=8080
# The base path for all endpoints.
CONTEXT_PATH=/api

# -----------------------------------------------------------------------------
# Spring Configuration
# -----------------------------------------------------------------------------
# Set the active Spring profile (e.g., dev, test, prod).
SPRING_PROFILES_ACTIVE=prod
# Enable or disable Java 21+ Virtual Threads for handling requests.
SPRING_THREADS_VIRTUAL_ENABLED=true

# -----------------------------------------------------------------------------
# Database (PostgreSQL) Configuration
# -----------------------------------------------------------------------------
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=auth-service
POSTGRES_USER=admin
POSTGRES_USERNAME=admin
POSTGRES_PASSWORD=your_strong_password

# -----------------------------------------------------------------------------
# Database Connection Pool (Hikari) Configuration
# -----------------------------------------------------------------------------
# Maximum number of connections in the pool.
HIKARI_MAX_POOL_SIZE=10
# Minimum number of idle connections to maintain.
HIKARI_MIN_IDLE=5
# Maximum time (ms) to wait for a connection from the pool.
HIKARI_CONNECTION_TIMEOUT=20000
# Maximum time (ms) a connection can be idle before being retired.
HIKARI_IDLE_TIMEOUT=300000

# -----------------------------------------------------------------------------
# Messaging (RabbitMQ) Configuration
# -----------------------------------------------------------------------------
RABBIT_MQ_HOST=rabbitmq
RABBIT_MQ_PORT=5672
RABBIT_MQ_USERNAME=guest
RABBIT_MQ_PASSWORD=guest

# -----------------------------------------------------------------------------
# Caching (Redis) Configuration
# -----------------------------------------------------------------------------
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_USERNAME=
REDIS_PASSWORD=your_strong_redis_password

# -----------------------------------------------------------------------------
# Application Specific Configuration
# -----------------------------------------------------------------------------
# --- CORS ---
# Comma-separated list of allowed origins for Cross-Origin Resource Sharing.
APP_CORS_ALLOWED_ORIGINS=http://localhost
# Whether to allow credentials (e.g., cookies, authorization headers).
APP_CORS_ALLOW_CREDENTIALS=true

# --- Passkey/WebAuthn ---
# Relying Party ID. Should be the domain name of your application.
PASSKEY_RPID=localhost
# Relying Party Origin. The full origin URL of your frontend application.
PASSKEY_ORIGIN=http://localhost
# Authentication mode for passkeys.
APP_AUTH_MODE=smartphone
# (UP Flag) Require user presence (e.g., touch ID, button press).
APP_UP_FLAG=true
# (UV Flag) Require user verification (e.g., PIN, biometric).
APP_UV_FLAG=true

# --- OTP (One-Time Password) ---
# The number of digits for the generated OTP.
APP_OTP_SIZE=6
# Time-to-live for an OTP (e.g., 60s, 2m, 1h).
APP_OTP_TTL=5m

# --- Challenge ---
# The length in bytes for security challenges (e.g., for WebAuthn).
APP_CHALLENGE_LEN_BYTES=32
# Time-to-live for a challenge.
APP_CHALLENGE_TTL=120s

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------
APP_FEATURE_VERIFICATION_INITIATE_ENABLED=true
APP_FEATURE_VERIFICATION_COMPLETE_ENABLED=true
APP_FEATURE_AUTHENTICATION_INITIATE_ENABLED=true
APP_FEATURE_AUTHENTICATION_COMPLETE_ENABLED=true
APP_FEATURE_REGISTRATION_COMPLETE_ENABLED=true

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Logging level for Spring Boot's auto-configuration components.
LOGGING_LEVEL_SPRING_BOOT=INFO
# Logging level for your application's specific packages (e.g., com.bankapp).
LOGGING_LEVEL_BANKAPP=INFO

# -----------------------------------------------------------------------------
# Documentation (Swagger/OpenAPI) Configuration
# -----------------------------------------------------------------------------
# If true, serves Swagger UI from the root path (/) instead of /swagger-ui.html.
SWAGGER_ON_ROOT=true
