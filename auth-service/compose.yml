# Authentication Service Stack
# Includes auth service and its dedicated data stores (Postgres, Redis)

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  bankapp-infra:
    external: true

services:
  postgres:
    image: postgres:16
    container_name: bankapp_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "15432:${POSTGRES_PORT}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - bankapp-infra
    env_file: ".env"

  redis:
    image: redis:7
    container_name: bankapp_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - bankapp-infra
    env_file: ".env"

  bankapp-auth-service:
    image: bankappproject/bankapp-auth-service:latest
    container_name: bankapp-auth-service
    networks:
      - bankapp-infra
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    pull_policy: always
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8080/api/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 10s
      retries: 5
    env_file: ".env"
